import { PartialDeepDesignerOptionsOther } from './designer-app';
import { Parameter, PartialDeepViewerOptionsOther } from './viewer-app';
export type LocalizationResourceBundle = {
    ns: string;
    resources: Record<string, any>;
};
export type { DesignerApi, DesignerOptionsBase, DesignerOptionsOther, DesignerOptions, ApplicationInfo, BarcodeSymbology, HelpInfo, Locale, ProductInfo, Units, MakeTitleOptions, ReportOperation, OnErrorOptions, OnSavedOptions, UpdateRouteOptions, ViewerOptions, ReportingApi, ReportInfo, ReportOperationErrorResult, DataSetInfo, CreateReportOptions, CreateReportSuccessResult, CreateReportResult, OpenReportOptions, OpenReportSuccessResult, OpenReportResult, SaveReportOptions, SaveReportSuccessResult, SaveReportResult, } from './designer-app';
export type { ExportType, ExportSettingsCsv, ExportSettingsDocx, ExportSettingsExcel, ExportSettingsExceldata, ExportSettingsHtml, ExportSettingsImage, ExportSettingsJson, ExportSettingsPdf, ExportSettingsTxt, ExportSettingsXml, ExportSettings, ExportSettingsMap, ExportOptions, ExportResult, HoverChartAnimationOptions, HoverTableAnimationOptions, LoadChartAnimationOptions, AnimationOptions, DisplayType, ViewMode, ZoomMode, SearchResult, OverridableToolbarButton, SearchOptions, ViewerApi, InitViewerOptionsBase, InitViewerOptionsOther, InitViewerOptions, Viewer, OpenReportOptions as ViewerOpenReportOptions, ReportInfo as ViewerReportInfo, Parameter, ParameterPanelOptions, ParamPanelShowMode, PanelsLocation, PageViewOptions, } from './viewer-app';
/** This type specifies the common reporting options from the `CreateReportDesignerOptions` and `CreateReportViewerOptions` types. */
export type CommonReportingOptions = {
    /**
     * The Wyn Enterprise server url. If your integration and Wyn server are not on the same site, you should provide your Wyn server host.
     * @example
     * baseUrl: 'https://your-wyn-server.com/',
     */
    baseUrl: string;
    /**
     * The access token. The token is generated from the Admin portal.
     * @example
     * token: 'your-wyn-token',
     */
    token: string;
    /**
     * Set the key name used in query parameters, this name is configured in the Wyn config file.\
     * If `tokenKey` is not specified, the default value `'token'` is used.
     * @example
     * tokenKey: 'tkn',
     */
    tokenKey?: string;
};
/** This type specifies the base options from the `CreateReportDesignerOptions` type. */
export type CreateReportDesignerOptionsBase = {
    /**
     * Set the language of the user interface, the acceptable values: `'zh'`, `'en'`, `'en-gb'`, `'zh-tw'`, `'pl'`.\
     * Also you can specify a custom language here in case it is uploaded to the Admin portal.
     * @example
     * language: 'zh',
     */
    language?: string;
    /**
     * Set the report id to be opened.
     * @example
     * reportId: 'your-report-id',
     */
    reportId?: string | null;
    /**
     * Set the report version to be opened. If not specified, the latest version is opened.\
     * Relevant only when `reportId` is defined.
     * @example
     * reportVersion: 8,
     */
    reportVersion?: number | null;
    /**
     * Set whether a report or a template is opened.\
     * Relevant only when `reportId` is defined.
     * @example
     * isReportTemplate: true,
     */
    isReportTemplate?: boolean;
    /**
     * Set your custom product title to be displayed in About dialog.
     * @example
     * productTitle: 'Product Title',
     */
    productTitle?: string;
    /**
     * Set your custom product version to be displayed in About dialog.\
     * Relevant only when `productTitle` is defined.
     * @example
     * productVersion: '3.2.1',
     */
    productVersion?: string;
    /**
     * Set your custom application title to be displayed in designer UI instead of the predefined title.
     * @example
     * applicationTitle: 'Application Title',
     */
    applicationTitle?: string;
    /**
     * Set your custom compact application title to be displayed in designer UI instead of the predefined title.\
     * It will be displayed in places where there is not enough space for a full title.
     * @example
     * applicationTitleCompact: 'App Title',
     */
    applicationTitleCompact?: string;
    /**
     * Set the built-in viewer availability and viewer options.
     */
    reportViewer?: {
        /**
         * Set whether the built-in viewer is available in designer.
         * @example
         * disabled: true,
         */
        disabled?: boolean;
        /**
         * Set the built-in viewer options.\
         * Relevant only when viewer is available.
         * @example
         * options: { isFullscreen: true },
         */
        options?: PartialDeepViewerOptionsOther;
    };
    /**
     * Set whether a report or a template is opened in the read-only mode so saving any changes is prohibited.\
     * By default this option is **disabled** so saving report or template changes is allowed.
     * @example
     * readOnly: true,
     */
    readOnly?: boolean;
    /**
     * Set the Wyn UI theme to be used by designer.\
     * Predefined themes: `'default'`, `'ars'`, `'blue'`, `'dark-forest'`, `'forest'`, `'green'`, `'light'`, `'minimal-blue'`, `'red'`, `'warm-light'`.\
     * Also you can specify a custom theme here in case it is uploaded to the Admin portal.\
     * If `theme` is not specified, the Wyn user preferences are applied.
     * @example
     * theme: 'forest',
     */
    theme?: string;
};
/** This type specifies the options passed to the `WynIntegration.createReportDesigner()` function. */
export type CreateReportDesignerOptions = CommonReportingOptions & CreateReportDesignerOptionsBase & PartialDeepDesignerOptionsOther;
/** This type specifies the base options from the `CreateReportViewerOptions` type. */
export type CreateReportViewerOptionsBase = {
    /**
     * Set the language of the user interface, the acceptable values: `'zh'`, `'en'`, `'en-gb'`, `'zh-tw'`, `'pl'`.\
     * Also you can specify a custom language here in case it is uploaded to the Admin portal.
     * @example
     * language: 'zh',
     */
    language?: string;
    /**
     * Set the Wyn UI theme to be used by viewer.\
     * Predefined themes: `'default'`, `'ars'`, `'blue'`, `'dark-forest'`, `'forest'`, `'green'`, `'light'`, `'minimal-blue'`, `'red'`, `'warm-light'`.\
     * Also you can specify a custom theme here in case it is uploaded to the Admin portal.\
     * If `theme` is not specified, the Wyn user preferences are applied.
     * @example
     * theme: 'forest',
     */
    theme?: string;
    /**
     * Set the report id to be previewed.
     * @example
     * reportId: 'your-report-id',
     */
    reportId?: string | null;
    /**
     * Set the array of `name`/`values` pairs describing parameters and their values used to preview the report.\
     * Relevant only when `reportId` is defined.
     * @example
     * reportParameters: [
     *  { name: 'StringParameter', values: ['abc'] },
     *  { name: 'IntegerMultivalueParameter', values: [1, 2, 3] },
     *  { name: 'BooleanParameter', values: [true] },
     * ],
     */
    reportParameters?: Parameter[];
    /**
     * Set the array of the report items names to be rendered from the specified report.\
     * By default the whole report content is rendered if this property is `undefined`.\
     * Relevant only when `reportId` is defined.
     * @example
     * reportItems: ['Table1', 'Chart1'],
    */
    reportItems?: string[];
    /**
     * Set the variant id to be applied to the specified report.\
     * Variant is applied when `reportParameters` are not specified.\
     * Relevant only when `reportId` is defined.
     * @example
     * variantId: 'report-variant-id',
     */
    reportVariantId?: string;
};
/** This type specifies the options passed to the `WynIntegration.createReportViewer()` function. */
export type CreateReportViewerOptions = CommonReportingOptions & CreateReportViewerOptionsBase & PartialDeepViewerOptionsOther;
