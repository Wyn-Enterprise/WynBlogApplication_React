declare const WynIntegration: {
    createDashboardDesigner: (configuration: import("./dashboard/types").DashboardDesignerConfig, selector: string) => Promise<import("./dashboard/types").DashboardDesigner>;
    createDashboardViewer: (configuration: import("./dashboard/types").DashboardViewerConfig, selector: string) => Promise<import("./dashboard/types").DashboardViewer>;
    createViewerLite: (configuration: import("./dashboard/types").DashboardLiteViewerConfig, selector: string) => Promise<import("./dashboard/types").DashboardLiteViewer>;
    createReportDesigner: (options: import("./report/types").CreateReportDesignerOptions, selector: string) => Promise<import("./report/types").DesignerApi>;
    createReportViewer: (options: import("./report/types").CreateReportViewerOptions, selector: string) => Promise<import("./report/types").Viewer>;
    createDatasetDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasetDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createStreamingDatasetDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasetDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createPushDatasetDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasetDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createDatasetViewer: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasetPreviewInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createDatasourceDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasourceDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createDatasourceViewer: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasetPreviewInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createSemanticDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").SemanticModelDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createDirectQueryDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").AnalysisDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createCacheModeDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").AnalysisDesignerInitOptionCore & {
        name?: string | undefined;
    }, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createCachedModelDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").AnalysisDesignerInitOptionCore & {
        name?: string | undefined;
    }, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createDirectQueryModelDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").AnalysisDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createNativeQueryDatasetDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasetDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createDirectQueryDatasetDesigner: (configuration: import("./common").commonConfig & import("./dataset/types").InitOptionBase & import("./dataset/types").DatasetDesignerInitOptionCore, selector: string) => Promise<import("./dataset/types").destroyAble>;
    createSceneDesigner: (configuration: import("./dashboard/types").SceneDesignerConfig, selector: string) => Promise<any>;
    createSceneViewer: (configuration: import("./dashboard/types").SceneViewerConfig, selector: string) => Promise<any>;
    createDocumentBinderDesigner: (configuration: import("./common").commonConfig & import("./documentBinder/types").InitOptionBase & import("./documentBinder/types").DocumentBinderInitOptionCore, selector: string) => Promise<import("./documentBinder/types").destroyAble>;
    createDocumentBinderViewer: (configuration: import("./common").commonConfig & import("./documentBinder/types").InitOptionBase & import("./documentBinder/types").DocumentBinderInitOptionCore, selector: string) => Promise<import("./documentBinder/types").destroyAble>;
    createDocumentPortal: (configuration: import("./common").commonConfig & import("./portal/types").InitOptionBase & import("./portal/types").DocumentPortalInitOptionCore, selector: string) => Promise<import("./portal/types").destroyAble>;
    createResourcePortal: (configuration: import("./common").commonConfig & import("./portal/types").InitOptionBase & import("./portal/types").ResourcePortalInitOptionCore, selector: string) => Promise<import("./portal/types").destroyAble>;
    createAdminPortal: (configuration: import("./common").commonConfig & import("./portal/types").InitOptionBase & import("./portal/types").AdminPortalInitOptionCore, selector: string) => Promise<import("./portal/types").destroyAble>;
};
export { InteractionMouseEventAction, Toolbar } from './dashboard';
export { WynIntegration };
export default WynIntegration;
