import { PREDEFINED_THEMES, isPredefinedTheme } from '@grapecity/gces-reporting-utils/themes.js';
export { PREDEFINED_THEMES, isPredefinedTheme };
export declare const loadJs: (src: string) => Promise<unknown>;
export declare const loadCss: (href: string) => Promise<unknown>;
export declare const concatUrls: (...urls: string[]) => string;
export declare const DEFAULT_TOKEN_KEY = "token";
export declare const fetchPluginsInfo: (baseUrl: string, token: string, tokenKey?: string, useTokenInHeader?: boolean) => Promise<Response>;
export type ExtraHandler = (plugins: {
    key: string;
    version: string;
}[]) => Record<string, string> | undefined;
export declare const getVersionAndTheme: (baseUrl: string, token: string, key: string, tokenKey?: string, useTokenInHeader?: boolean, extraHandler?: ExtraHandler) => Promise<any>;
export type CustomThemeInfo = {
    displayName: string;
    modified: string;
    name: string;
    pluginVersion: string;
    themeVariables: Record<string, string | boolean>;
};
export declare const getCustomThemes: (baseUrl: string, token: string, tokenKey?: string, useTokenInHeader?: boolean) => Promise<CustomThemeInfo[]>;
export interface commonConfig {
    /**
     * The Wyn Enterprise server url. If your integration and Wyn server are not on the same site, you should provide your Wyn server host.
     * @example
     * baseUrl: 'https://your-wyn-server.com/',
     */
    baseUrl: string;
    /**
     * The access token. The token is generated from the Admin portal.
     * @example
     * token: 'your-wyn-token',
     */
    token: string;
    /**
     * Set the key name used in query parameters, this name is configured in the Wyn config file.\
     * If `tokenKey` is not specified, the default value `'token'` is used.
     * @example
     * tokenKey: 'tkn',
     */
    tokenKey?: string;
    /**
     * Set if the token should be sent in the request header instead of the query parameter.\
     * default value: fasle
     * @example
     * useTokenInHeader: true,
     */
    useTokenInHeader?: boolean;
}
